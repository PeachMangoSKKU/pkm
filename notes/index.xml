<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://shihyuho.github.io/pkm/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><atom:link href="https://shihyuho.github.io/pkm/notes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://shihyuho.github.io/pkm/notes/assigning-pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shihyuho.github.io/pkm/notes/assigning-pods/</guid><description>+home Assigning Pods 在部署 Deployment 時, 有些情況我們會希望 Kubernetes 依照我們的需求來安排部署的 Node, 例如:
當我們開多份 Replicas 時, 希望這些 Replicas 時儘量不要安排到同一個 Node 上 不同的部署但性質相雷同的程式, 例如資源需求 (如 CPU 運算) 較高等, 希望儘量不要安排到同一個 Node 上 Affinity 在 spec.affinity 下一共有 podAffinity (正向) 或 podAntiAffinity (反向), 這是用來約束 Kubernetes 該怎麼安排 Pod 到 Node 上, 這兩種 affinity 中都有兩種 type 可以使用:
requiredDuringSchedulingIgnoredDuringExecution - Hard requirement, 要求 Kubernetes 依照設定安排, 沒滿足就不部署 Pod preferredDuringSchedulingIgnoredDuringExecution - Soft requirement, 建議 Kubernetes 儘量滿足設定安排, 無法滿足仍要部署 Pod Use Case 以下我們範例是一個常見的需求: 建議 Kubernetes 將多個 replicas 儘量分散到不同的 Node 中</description></item></channel></rss>